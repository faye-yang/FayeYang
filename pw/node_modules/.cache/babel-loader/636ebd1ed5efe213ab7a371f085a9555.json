{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yufei/Desktop/personal_web/pw/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/yufei/Desktop/personal_web/pw/src/Component/form.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from 'material-ui/TextField';\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton';\nimport SelectField from 'material-ui/SelectField';\nimport asyncValidate from './asyncValidate';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst renderTextField = (_ref) => {\n  let input = _ref.input,\n      label = _ref.label,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      custom = _objectWithoutProperties(_ref, [\"input\", \"label\", \"meta\"]);\n\n  return React.createElement(TextField, Object.assign({\n    hintText: label,\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, custom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nconst renderCheckbox = ({\n  input,\n  label\n}) => React.createElement(Checkbox, {\n  label: label,\n  checked: input.value ? true : false,\n  onCheck: input.onChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n});\n\nconst renderRadioGroup = (_ref2) => {\n  let input = _ref2.input,\n      rest = _objectWithoutProperties(_ref2, [\"input\"]);\n\n  return React.createElement(RadioButtonGroup, Object.assign({}, input, rest, {\n    valueSelected: input.value,\n    onChange: (event, value) => input.onChange(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nconst renderSelectField = (_ref3) => {\n  let input = _ref3.input,\n      label = _ref3.label,\n      _ref3$meta = _ref3.meta,\n      touched = _ref3$meta.touched,\n      error = _ref3$meta.error,\n      children = _ref3.children,\n      custom = _objectWithoutProperties(_ref3, [\"input\", \"label\", \"meta\", \"children\"]);\n\n  return React.createElement(SelectField, Object.assign({\n    floatingLabelText: label,\n    errorText: touched && error\n  }, input, {\n    onChange: (event, index, value) => input.onChange(value),\n    children: children\n  }, custom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nconst MaterialUiForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        reset = props.reset,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    component: renderTextField,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"lastName\",\n    component: renderTextField,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    component: renderTextField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"notes\",\n    component: renderTextField,\n    label: \"Notes\",\n    multiLine: true,\n    rows: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(MaterialUiForm);","map":{"version":3,"sources":["/Users/yufei/Desktop/personal_web/pw/src/Component/form.js"],"names":["React","Field","reduxForm","TextField","RadioButton","RadioButtonGroup","SelectField","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","input","label","meta","touched","error","custom","renderCheckbox","value","onChange","renderRadioGroup","rest","event","renderSelectField","children","index","MaterialUiForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from 'material-ui/TextField'\nimport { RadioButton, RadioButtonGroup } from 'material-ui/RadioButton'\n\nimport SelectField from 'material-ui/SelectField'\nimport asyncValidate from './asyncValidate'\n\nconst validate = values => {\n    const errors = {}\n    const requiredFields = [ 'firstName', 'lastName', 'email', 'favoriteColor', 'notes' ]\n    requiredFields.forEach(field => {\n        if (!values[ field ]) {\n            errors[ field ] = 'Required'\n        }\n    })\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address'\n    }\n    return errors\n}\n\nconst renderTextField = ({ input, label, meta: { touched, error }, ...custom }) => (\n    <TextField hintText={label}\n               floatingLabelText={label}\n               errorText={touched && error}\n               {...input}\n               {...custom}\n    />\n)\n\nconst renderCheckbox = ({ input, label }) => (\n    <Checkbox label={label}\n              checked={input.value ? true : false}\n              onCheck={input.onChange}/>\n)\n\nconst renderRadioGroup = ({ input, ...rest }) => (\n    <RadioButtonGroup {...input} {...rest}\n                      valueSelected={input.value}\n                      onChange={(event, value) => input.onChange(value)}/>\n)\n\nconst renderSelectField = ({ input, label, meta: { touched, error }, children, ...custom }) => (\n    <SelectField\n        floatingLabelText={label}\n        errorText={touched && error}\n        {...input}\n        onChange={(event, index, value) => input.onChange(value)}\n        children={children}\n        {...custom}/>\n)\n\nconst MaterialUiForm = props => {\n    const { handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field name=\"firstName\" component={renderTextField} label=\"First Name\"/>\n            </div>\n            <div>\n                <Field name=\"lastName\" component={renderTextField} label=\"Last Name\"/>\n            </div>\n            <div>\n                <Field name=\"email\" component={renderTextField} label=\"Email\"/>\n            </div>\n\n            <div>\n                <Field name=\"notes\" component={renderTextField} label=\"Notes\" multiLine={true} rows={2}/>\n            </div>\n            <div>\n                <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'MaterialUiForm',  // a unique identifier for this form\n    validate,\n    asyncValidate\n})(MaterialUiForm)"]},"metadata":{},"sourceType":"module"}